// web/pages/blog.templ
package pages

import (
	"blog-portfolio/internal/models"
	"blog-portfolio/web/components"
	"blog-portfolio/web/layouts"
)

// Main blog listing page
templ Blog(posts []*models.Post, currentPage int, activeTag string) {
	@layouts.Base(layouts.PageData{
		Title:       "Blog | My Portfolio",
		Description: "Read my latest blog posts about technology and software development",
	}) {
		<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
			<h1 class="text-4xl font-bold text-neutral-900 dark:text-white mb-8">Blog</h1>
			if activeTag != "" {
				<div class="mb-6">
					<span class="text-sm text-neutral-600 dark:text-neutral-400">
						Showing posts tagged with:
					</span>
					<span
						class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-100 text-primary-800 dark:bg-primary-800 dark:text-primary-100"
					>
						{ activeTag }
					</span>
				</div>
			}
			@BlogPostList(posts)
			@components.Pagination(currentPage, len(posts) == 10)
			// Show pagination if we have full page
		</div>
	}
}

// Blog post list component (used for both main page and HTMX updates)
templ BlogPostList(posts []*models.Post) {
	<div class="space-y-10">
		for _, post := range posts {
			@components.PostPreview(post)
		}
		if len(posts) == 0 {
			<div class="text-center py-12">
				<p class="text-neutral-600 dark:text-neutral-400">No posts found.</p>
			</div>
		}
	</div>
}

// Individual blog post page
templ BlogPost(post *models.Post) {
	@layouts.Base(layouts.PageData{
		Title:       post.Title + " | Blog",
		Description: post.Description,
	}) {
		<article class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
			<header class="mb-8">
				<h1 class="text-4xl font-bold text-neutral-900 dark:text-white mb-4">
					{ post.Title }
				</h1>
				<div class="flex items-center space-x-4 text-sm text-neutral-600 dark:text-neutral-400">
					<time datetime={ post.PublishedAt.Format("2006-01-02") }>
						{ post.PublishedAt.Format("January 2, 2006") }
					</time>
					if len(post.Tags) > 0 {
						<div class="flex items-center space-x-2">
							<span>â€¢</span>
							<div class="flex flex-wrap gap-2">
								for _, tag := range post.Tags {
									@components.Tag(tag)
								}
							</div>
						</div>
					}
				</div>
			</header>
			if post.CoverImage != "" {
				<div class="mb-8">
					<img src={ post.CoverImage } alt={ post.Title } class="rounded-lg w-full object-cover"/>
				</div>
			}
			<div class="prose dark:prose-invert max-w-none">
				// Use raw HTML rendering since we trust our own markdown parsing
				@templ.Raw(post.ParsedContent())
			</div>
		</article>
	}
}
