// web/pages/admin/posts.templ
package admin

import (
"blog-portfolio/internal/models"
"blog-portfolio/web/layouts"
"fmt"
)

type PostListData struct {
Posts []*models.Post
CurrentPage int
TotalPages int
TotalPosts int
}

templ Posts(data PostListData) {
@layouts.Admin(layouts.PageData{
Title: "Posts | Admin",
Description: "Manage your blog posts",
}) {
<div class="px-4 sm:px-6 lg:px-8">
  <div class="sm:flex sm:items-center">
    <div class="sm:flex-auto">
      <h1 class="text-2xl font-semibold text-neutral-900 dark:text-white">Posts</h1>
      <p class="mt-2 text-sm text-neutral-700 dark:text-neutral-300">
        A list of all your blog posts including drafts. Total: { fmt.Sprintf("%d", data.TotalPosts) } posts.
      </p>
    </div>
    <div class="mt-4 sm:mt-0 sm:ml-16 sm:flex-none">
      <a href="/admin/posts/new"
        class="inline-flex items-center justify-center rounded-md border border-transparent bg-primary-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 sm:w-auto">
        New Post
      </a>
    </div>
  </div>
  <div class="mt-8">
    @PostList(data.Posts)
  </div>
  if data.TotalPages > 1 {
  // TODO: figure this out later
  <!-- <div class="mt-6"> -->
  <!--   @Pagination(data.CurrentPage, data.TotalPages) -->
  <!-- </div> -->
  }
</div>
}
}

templ PostList(posts []*models.Post) {
<div class="flow-root">
  <div class="-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8">
    <div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
      <div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 rounded-lg">
        <table class="min-w-full divide-y divide-neutral-300 dark:divide-neutral-700">
          <thead class="bg-neutral-50 dark:bg-neutral-800">
            <tr>
              <th scope="col"
                class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-neutral-900 dark:text-white sm:pl-6">
                Title
              </th>
              <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-neutral-900 dark:text-white">
                Status
              </th>
              <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-neutral-900 dark:text-white">
                Published Date
              </th>
              <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-neutral-900 dark:text-white">
                Last Modified
              </th>
              <th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6">
                <span class="sr-only">Actions</span>
              </th>
            </tr>
          </thead>
          <tbody class="divide-y divide-neutral-200 dark:divide-neutral-700 bg-white dark:bg-neutral-900">
            if len(posts) == 0 {
            <tr>
              <td colspan="5" class="px-6 py-4 text-sm text-neutral-500 dark:text-neutral-400 text-center">
                No posts found
              </td>
            </tr>
            }
            for _, post := range posts {
            <tr id={ fmt.Sprintf("post-%d", post.ID) }>
              <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-neutral-900 dark:text-white sm:pl-6">
                { post.Title }
              </td>
              <td class="whitespace-nowrap px-3 py-4 text-sm">
                if post.Published {
                <span
                  class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100">
                  Published
                </span>
                } else {
                <span
                  class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-800 dark:text-yellow-100">
                  Draft
                </span>
                }
              </td>
              <td class="whitespace-nowrap px-3 py-4 text-sm text-neutral-500 dark:text-neutral-400">
                if post.PublishedAt != nil {
                { post.PublishedAt.Format("Jan 02, 2006") }
                } else {
                â€”
                }
              </td>
              <td class="whitespace-nowrap px-3 py-4 text-sm text-neutral-500 dark:text-neutral-400">
                { post.UpdatedAt.Format("Jan 02, 2006 15:04") }
              </td>
              <td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
                <div class="flex justify-end gap-2">
                  <a href={ templ.SafeURL("/blog/" + post.Slug) } target="_blank"
                    class="text-primary-600 hover:text-primary-900 dark:text-primary-400 dark:hover:text-primary-300">
                    View
                  </a>
                  <a href={ templ.SafeURL("/admin/posts/" + fmt.Sprintf("%d", post.ID)) }
                    class="text-primary-600 hover:text-primary-900 dark:text-primary-400 dark:hover:text-primary-300">
                    Edit
                  </a>
                  <button class="text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300" hx-delete={
                    fmt.Sprintf("/admin/posts/%d", post.ID) } hx-confirm="Are you sure you want to delete this post?"
                    hx-target={ fmt.Sprintf("#post-%d", post.ID) } hx-swap="outerHTML swap:1s">
                    Delete
                  </button>
                </div>
              </td>
            </tr>
            }
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>
}
