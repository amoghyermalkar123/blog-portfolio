// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.731
// web/components/navbar.templ

package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Navbar() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<nav class=\"bg-white dark:bg-neutral-800 border-b border-neutral-200 dark:border-neutral-700\"><div class=\"container mx-auto px-4\"><div class=\"flex justify-between h-16\"><div class=\"flex\"><div class=\"flex-shrink-0 flex items-center\"><a href=\"/\" class=\"text-xl font-bold text-neutral-900 dark:text-white font-mono\">Blog & Portfolio</a></div><div class=\"hidden sm:ml-6 sm:flex sm:space-x-8\"><a href=\"/\" class=\"inline-flex items-center px-1 pt-1 text-sm font-medium text-neutral-900 dark:text-white\">Home</a> <a href=\"/blog\" class=\"inline-flex items-center px-1 pt-1 text-sm font-medium text-neutral-500 dark:text-neutral-400 hover:text-neutral-900 dark:hover:text-white\">Blog</a> <a href=\"/portfolio\" class=\"inline-flex items-center px-1 pt-1 text-sm font-medium text-neutral-500 dark:text-neutral-400 hover:text-neutral-900 dark:hover:text-white\">Portfolio</a></div></div><div class=\"flex items-center\"><button type=\"button\" x-data=\"{ darkMode: localStorage.theme === &#39;dark&#39; }\" @click=\"darkMode = !darkMode; localStorage.theme = darkMode ? &#39;dark&#39; : &#39;light&#39;; document.documentElement.classList.toggle(&#39;dark&#39;)\" class=\"p-2 text-neutral-500 dark:text-neutral-400 hover:text-neutral-900 dark:hover:text-white\"><span x-show=\"!darkMode\" class=\"w-5 h-5\">üåô</span> <span x-show=\"darkMode\" class=\"w-5 h-5\">‚òÄÔ∏è</span></button></div></div></div></nav>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
